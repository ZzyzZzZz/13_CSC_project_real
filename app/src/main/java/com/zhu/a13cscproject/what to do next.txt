1. At the moment buttons leads to wrong places, the app is meant to flow from check_signIn straight to choose_food activity, now it is leading to
empty page where recyclerview exists, and the floating button is meant to take you to checkout, the listview for recount, not food selection. FoodSpecification is meant
to be for each recyclerview, not check out button. Fix after set up SQLite.
2. how to enter data as a developer into database SQLite: copy and past codes to create a separate activity and set the TextViews to EditTexts. Hidden ofc. Testing purpose,
will not hide it and probably in final version just change it to TextView.
3. In moderator addfood, do make it so that they can delete foods as well. not prioritized.
4. add warning msg upon exit recyclerView updater, if update button was not pressed. "want not saving order?"

5.VERY WEIRD: continue with deleting qty=0 data in OrderConfirm_v2.




Reasoning for what I did:
1. limit to 10 items per account each purchase:
well, in the future if this app is implemented, I wish to integrate an honor system to prevent discard of orders or similar things of that sort. So I highly
encourage people to use their own device, own account for the best possible experience.



extra.txt

// here is the idea, I need to upload to firebase a set of food menu once, then
//the buyers and sellers can just communicate with simple digits, for example, if I have
//a dictionary (python) in firebase, I can just refer the key as food name and value as how many,
//price and image are local data since firebase limits amount of uploads and downloads per day.
//so more like {1:1,2:1,3:0} and such, but now I need a way so I can connect two people together,
//buyer and seller, where they can have a private room of their own for data to transfer without
// getting mixed up. So matching people together is also a challenge, I am thinking of creating
// a list full of sellers and buyers can just connect as a child class under firebase to give info
// to only that seller.
//.push() under firebase with unique key might come in handy

//suggestion to Miss: next year tell students what are activities, what is override, what is
// listeners and toast messages, logcat, then they should be fine no problem. The main problem with
//this year is the information overload, it is not that important to understand everything from
//scratch, I learn more when I started to use them, create small projects or watching tutorials
//on how to make a specific thing filters out the other unrelated parts, which will make the
//simplicity of android studio stand out.
//the most complicated part this year is the fast progression, if we spend only one day on something
//specific such as how location manager works then we will have no problem, or maybe just focusing on
//keeping the progress fast but explain everything once, for people who got it let them move on
// and those who didn't can come sit around a table once a week to catch up. This way is the most
// efficient, as for people who are ahead they just ask questions.